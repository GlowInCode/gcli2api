name: Sync and Build

on:
  schedule:
    - cron: '0 * * * *'   # 每小时触发
  workflow_dispatch:       # 支持手动触发

jobs:
  sync-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fork
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Add upstream remote
        run: git remote add upstream https://github.com/su-kaka/gcli2api.git || echo "Upstream already exists"

      - name: Fetch upstream
        run: git fetch upstream

      - name: Merge upstream changes
        id: merge
        run: |
          git checkout master
          if git merge upstream/master --no-edit --no-commit; then
            if git diff --cached --quiet; then
              echo "No changes detected"
              echo "updated=false" >> $GITHUB_OUTPUT
            else
              echo "Changes merged"
              git commit -m "Merge upstream changes"
              git push origin master
              echo "updated=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "Merge conflict or nothing to merge"
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        if: steps.merge.outputs.updated == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercased repository owner
        if: steps.merge.outputs.updated == 'true'
        id: repo
        run: echo "repo_owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        if: steps.merge.outputs.updated == 'true'
        run: |
          IMAGE_NAME=ghcr.io/${{ steps.repo.outputs.repo_owner }}/gcli2api:latest
          echo "Building and pushing $IMAGE_NAME ..."
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Show usage instructions
        if: steps.merge.outputs.updated == 'true'
        run: |
          echo "要在本地或服务器启动容器，请使用："
          echo "docker run -d -p 7861:7861 -v /app/geminicli/creds:/app/geminicli/creds ghcr.io/${{ steps.repo.outputs.repo_owner }}/gcli2api:latest"
