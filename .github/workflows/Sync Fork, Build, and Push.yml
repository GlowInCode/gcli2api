# .github/workflows/sync-and-build.yml

name: Sync, Build, and Push to GHCR

on:
  # 仅保留定时任务：每小时的第0分钟执行一次
  schedule:
    - cron: '0 * * * *'
  
  # 你仍然可以保留手动触发，它会运行下面的定时任务逻辑
  workflow_dispatch:

jobs:
  # --- 定时或手动同步，仅在有更新时构建 ---
  sync_and_build_if_updated:
    name: 同步并按需构建
    runs-on: ubuntu-latest
    # 设置推送到 ghcr.io 所需的权限
    permissions:
      contents: write # 需要 write 权限来推送更新
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 需要一个有推送权限的 token
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote and fetch
        run: |
          git remote add upstream https://github.com/su-kaka/gcli2api.git
          git fetch upstream

      - name: Check for updates and merge
        id: sync
        run: |
          # 假设你的默认分支是 main，如果不是请修改
          BRANCH="master"
          # 切换到你的分支
          git checkout $BRANCH
          BEFORE=$(git rev-parse $BRANCH)
          # 合并上游分支
          git merge upstream/$BRANCH --ff-only || true
          AFTER=$(git rev-parse $BRANCH)
          if [ "$BEFORE" != "$AFTER" ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "检测到上游更新。"
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "上游无新变化。"
          fi

      - name: Push updated code to fork
        if: steps.sync.outputs.has_updates == 'true'
        run: git push origin main

      - name: Log in to GitHub Container Registry
        if: steps.sync.outputs.has_updates == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image tags
        if: steps.sync.outputs.has_updates == 'true'
        id: prep_tags
        run: |
          LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="gcli2api"
          echo "tags=ghcr.io/${LOWERCASE_OWNER}/${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: steps.sync.outputs.has_updates == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: steps.sync.outputs.has_updates == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.prep_tags.outputs.tags }}
          
      - name: Summary
        run: |
          if [ "${{ steps.sync.outputs.has_updates }}" == "true" ]; then
            echo "✅ 工作流完成：已同步 Fork，镜像已构建并推送到 ghcr.io。"
          else
            echo "☑️ 工作流完成：上游无更新，无需任何操作。"
          fi
